
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Wed Sep 02 02:08:42 ART 2015
//----------------------------------------------------

import java_cup.runtime.*;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Wed Sep 02 02:08:42 ART 2015
  */
public class CTdsParser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public CTdsParser() {super();}

  /** Constructor which sets the default scanner. */
  public CTdsParser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public CTdsParser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\004\000\002\002\004\000\002\002\004\000\002\002" +
    "\003\000\002\002\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\006\000\006\004\006\005\005\001\002\000\006\002" +
    "\010\004\007\001\002\000\006\002\ufffe\004\ufffe\001\002" +
    "\000\006\002\uffff\004\uffff\001\002\000\006\002\001\004" +
    "\001\001\002\000\004\002\000\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\006\000\004\002\003\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$CTdsParser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$CTdsParser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$CTdsParser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 1;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    public void report_error(String message, Object info) {
       	StringBuffer m = new StringBuffer("Error");
		System.out.println("Mensaje: "+message);
		System.out.println("info: "+info.toString());
		if(info instanceof java_cup.runtime.Symbol) {
			java_cup.runtime.Symbol s=((java_cup.runtime.Symbol)info);
			/* Comprueba si el numero de lÃ­nea es mayor o igual que cero */
			if(s.left >= 0) {
				m.append(" en linea "+(s.left+1));
				/*Comprueba si el numero de columna es mayoro igual que cero */
				if (s.right >= 0)
					m.append(", y columna "+(s.right+1));
			}
		}
		m.append(" : "+message);
		System.err.println(m);
    }
    public void report_fatal_error(String message, Object info) {
       	report_error(message, info);
		System.exit(1);
    }
 

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$CTdsParser$actions {
  private final CTdsParser parser;

  /** Constructor */
  CUP$CTdsParser$actions(CTdsParser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$CTdsParser$do_action(
    int                        CUP$CTdsParser$act_num,
    java_cup.runtime.lr_parser CUP$CTdsParser$parser,
    java.util.Stack            CUP$CTdsParser$stack,
    int                        CUP$CTdsParser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$CTdsParser$result;

      /* select the action based on the action number */
      switch (CUP$CTdsParser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // programa ::= float_literal 
            {
              Object RESULT =null;
		int fleft = ((java_cup.runtime.Symbol)CUP$CTdsParser$stack.peek()).left;
		int fright = ((java_cup.runtime.Symbol)CUP$CTdsParser$stack.peek()).right;
		Float f = (Float)((java_cup.runtime.Symbol) CUP$CTdsParser$stack.peek()).value;
		 System.out.println(f); 
              CUP$CTdsParser$result = parser.getSymbolFactory().newSymbol("programa",0, ((java_cup.runtime.Symbol)CUP$CTdsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CTdsParser$stack.peek()), RESULT);
            }
          return CUP$CTdsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // programa ::= int_literal 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$CTdsParser$stack.peek()).left;
		int iright = ((java_cup.runtime.Symbol)CUP$CTdsParser$stack.peek()).right;
		Integer i = (Integer)((java_cup.runtime.Symbol) CUP$CTdsParser$stack.peek()).value;
		 System.out.println(i); 
              CUP$CTdsParser$result = parser.getSymbolFactory().newSymbol("programa",0, ((java_cup.runtime.Symbol)CUP$CTdsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CTdsParser$stack.peek()), RESULT);
            }
          return CUP$CTdsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // $START ::= programa EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$CTdsParser$stack.elementAt(CUP$CTdsParser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$CTdsParser$stack.elementAt(CUP$CTdsParser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$CTdsParser$stack.elementAt(CUP$CTdsParser$top-1)).value;
		RESULT = start_val;
              CUP$CTdsParser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$CTdsParser$stack.elementAt(CUP$CTdsParser$top-1)), ((java_cup.runtime.Symbol)CUP$CTdsParser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$CTdsParser$parser.done_parsing();
          return CUP$CTdsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // programa ::= programa int_literal 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$CTdsParser$stack.peek()).left;
		int iright = ((java_cup.runtime.Symbol)CUP$CTdsParser$stack.peek()).right;
		Integer i = (Integer)((java_cup.runtime.Symbol) CUP$CTdsParser$stack.peek()).value;
		 System.out.println(i);  
              CUP$CTdsParser$result = parser.getSymbolFactory().newSymbol("programa",0, ((java_cup.runtime.Symbol)CUP$CTdsParser$stack.elementAt(CUP$CTdsParser$top-1)), ((java_cup.runtime.Symbol)CUP$CTdsParser$stack.peek()), RESULT);
            }
          return CUP$CTdsParser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

